{"ast":null,"code":"var _class;\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/hello-service.service\";\nimport * as i2 from \"src/app/services/customer-service.service\";\nimport * as i3 from \"@angular/common\";\nexport class MultipleServiceComponent {\n  constructor(_helloService, _customerService) {\n    this._helloService = _helloService;\n    this._customerService = _customerService;\n  }\n  ngOnInit() {\n    forkJoin([this._helloService.helloService(), this._customerService.getCustomers()]).subscribe(response => {\n      this._helloService = response[0];\n      this._customerService = response;\n    });\n  }\n}\n_class = MultipleServiceComponent;\n_class.ɵfac = function MultipleServiceComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HelloServiceService), i0.ɵɵdirectiveInject(i2.CustomerServiceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-multiple-service\"]],\n  decls: 6,\n  vars: 6,\n  consts: [[2, \"color\", \"red\"], [2, \"color\", \"green\"]],\n  template: function MultipleServiceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵpipe(2, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"h1\", 1);\n      i0.ɵɵtext(4);\n      i0.ɵɵpipe(5, \"json\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 2, ctx.helloResponse));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 4, ctx.customerResponse));\n    }\n  },\n  dependencies: [i3.JsonPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["forkJoin","MultipleServiceComponent","constructor","_helloService","_customerService","ngOnInit","helloService","getCustomers","subscribe","response","i0","ɵɵdirectiveInject","i1","HelloServiceService","i2","CustomerServiceService","selectors","decls","vars","consts","template","MultipleServiceComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","helloResponse","customerResponse"],"sources":["C:\\Users\\varunkm\\Desktop\\Angular-js importance\\multipleServices\\src\\app\\components\\multiple-service\\multiple-service.component.ts","C:\\Users\\varunkm\\Desktop\\Angular-js importance\\multipleServices\\src\\app\\components\\multiple-service\\multiple-service.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HelloServiceService } from 'src/app/services/hello-service.service';\nimport { CustomerServiceService } from 'src/app/services/customer-service.service';\nimport { forkJoin } from 'rxjs';\n@Component({\n  selector: 'app-multiple-service',\n  templateUrl: './multiple-service.component.html',\n  styleUrls: ['./multiple-service.component.css']\n})\nexport class MultipleServiceComponent implements OnInit {\n  public helloResponse:any;\n  public customerResponse:any;\n constructor(private _helloService:HelloServiceService,private _customerService:CustomerServiceService){ }\n\n ngOnInit(){\n    forkJoin([this._helloService.helloService(), this._customerService.getCustomers()])\n    .subscribe(response=>{\n      this._helloService = response[0];\n      this._customerService = response\n    })\n }\n}\n","<h1 style=\"color: red;\">{{helloResponse | json}}</h1>\n<h1 style=\"color: green;\">{{customerResponse | json}}</h1>"],"mappings":";AAGA,SAASA,QAAQ,QAAQ,MAAM;;;;;AAM/B,OAAM,MAAOC,wBAAwB;EAGpCC,YAAoBC,aAAiC,EAASC,gBAAuC;IAAjF,KAAAD,aAAa,GAAbA,aAAa;IAA6B,KAAAC,gBAAgB,GAAhBA,gBAAgB;EAA0B;EAExGC,QAAQA,CAAA;IACLL,QAAQ,CAAC,CAAC,IAAI,CAACG,aAAa,CAACG,YAAY,EAAE,EAAE,IAAI,CAACF,gBAAgB,CAACG,YAAY,EAAE,CAAC,CAAC,CAClFC,SAAS,CAACC,QAAQ,IAAE;MACnB,IAAI,CAACN,aAAa,GAAGM,QAAQ,CAAC,CAAC,CAAC;MAChC,IAAI,CAACL,gBAAgB,GAAGK,QAAQ;IAClC,CAAC,CAAC;EACL;;SAXYR,wBAAwB;;mBAAxBA,MAAwB,EAAAS,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,mBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,sBAAA;AAAA;;QAAxBd,MAAwB;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTrCZ,EAAA,CAAAc,cAAA,YAAwB;MAAAd,EAAA,CAAAe,MAAA,GAAwB;;MAAAf,EAAA,CAAAgB,YAAA,EAAK;MACrDhB,EAAA,CAAAc,cAAA,YAA0B;MAAAd,EAAA,CAAAe,MAAA,GAA2B;;MAAAf,EAAA,CAAAgB,YAAA,EAAK;;;MADlChB,EAAA,CAAAiB,SAAA,GAAwB;MAAxBjB,EAAA,CAAAkB,iBAAA,CAAAlB,EAAA,CAAAmB,WAAA,OAAAN,GAAA,CAAAO,aAAA,EAAwB;MACtBpB,EAAA,CAAAiB,SAAA,GAA2B;MAA3BjB,EAAA,CAAAkB,iBAAA,CAAAlB,EAAA,CAAAmB,WAAA,OAAAN,GAAA,CAAAQ,gBAAA,EAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}