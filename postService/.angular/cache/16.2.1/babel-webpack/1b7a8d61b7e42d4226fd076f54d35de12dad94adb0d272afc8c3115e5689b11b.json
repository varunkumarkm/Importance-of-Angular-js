{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nexport class UppercaseConverterComponent {}\n_class = UppercaseConverterComponent;\n_class.ɵfac = function UppercaseConverterComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-uppercase-converter\"]],\n  decls: 7,\n  vars: 4,\n  consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [2, \"color\", \"red\"]],\n  template: function UppercaseConverterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function UppercaseConverterComponent_Template_input_ngModelChange_0_listener($event) {\n        return ctx.my_message = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function UppercaseConverterComponent_Template_button_click_1_listener() {\n        return ctx.convert({\n          \"title\": ctx.my_message\n        });\n      });\n      i0.ɵɵtext(2, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"br\");\n      i0.ɵɵelementStart(4, \"h1\", 2);\n      i0.ɵɵtext(5);\n      i0.ɵɵpipe(6, \"json\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngModel\", ctx.my_message);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 2, ctx.result));\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i2.JsonPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\n{}\nconvert(obj);\n{\n  this._service.converToUpperCase(obj).subscribe(response => {\n    this.result = response;\n  }, error => {\n    console.error(error);\n  });\n}","map":{"version":3,"names":["UppercaseConverterComponent","selectors","decls","vars","consts","template","UppercaseConverterComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","UppercaseConverterComponent_Template_input_ngModelChange_0_listener","$event","my_message","ɵɵelementEnd","UppercaseConverterComponent_Template_button_click_1_listener","convert","ɵɵtext","ɵɵelement","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","result","obj","_service","converToUpperCase","subscribe","response","error","console"],"sources":["C:\\Users\\varunkm\\Desktop\\Angular-js importance\\postService\\src\\app\\components\\uppercase-converter\\uppercase-converter.component.ts","C:\\Users\\varunkm\\Desktop\\Angular-js importance\\postService\\src\\app\\components\\uppercase-converter\\uppercase-converter.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { UppercaseConverterService } from 'src/app/services/uppercase-converter.service';\nimport {HttpErrorResponse} from '@angular/common/http';\n\n@Component({\n  selector: 'app-uppercase-converter',\n  templateUrl: './uppercase-converter.component.html',\n  styleUrls: ['./uppercase-converter.component.css']\n})\nexport class UppercaseConverterComponent  {\n   public result:any;\n   public my_message:any;\n   public obj:\n     constructor(private _service:UppercaseConverterService){\n\n     }\n \n  public convert(obj) {\n    this._service.converToUpperCase(obj).subscribe(\n      (response)=> {\n        this.result = response; \n      },\n      (error:HttpErrorResponse) => {\n        console.error(error); \n      }\n    )\n  }\n}\n","<input type=\"text\"[(ngModel)] = 'my_message'/>\n\n<!-- [(ngModel)] directive - This is used to the 'takes the value from the particular text field and\n                        it will assign and bind it to the particular javaScript variable' -->\n<button (click) = \"convert({'title': my_message})\">Submit</button>\n<br>\n<h1 style=\"color: red;\">{{result | json}}</h1>"],"mappings":";;;;AASA,OAAM,MAAOA,2BAA2B;SAA3BA,2BAA2B;;mBAA3BA,MAA2B;AAAA;;QAA3BA,MAA2B;EAAAC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTxCE,EAAA,CAAAC,cAAA,eAA8C;MAA5BD,EAAA,CAAAE,UAAA,2BAAAC,oEAAAC,MAAA;QAAA,OAAAL,GAAA,CAAAM,UAAA,GAAAD,MAAA;MAAA,EAA0B;MAA5CJ,EAAA,CAAAM,YAAA,EAA8C;MAI9CN,EAAA,CAAAC,cAAA,gBAAmD;MAA3CD,EAAA,CAAAE,UAAA,mBAAAK,6DAAA;QAAA,OAAWR,GAAA,CAAAS,OAAA;UAAA,SAAAT,GAAA,CAAAM;QAAA,EAA8B;MAAA,EAAC;MAACL,EAAA,CAAAS,MAAA,aAAM;MAAAT,EAAA,CAAAM,YAAA,EAAS;MAClEN,EAAA,CAAAU,SAAA,SAAI;MACJV,EAAA,CAAAC,cAAA,YAAwB;MAAAD,EAAA,CAAAS,MAAA,GAAiB;;MAAAT,EAAA,CAAAM,YAAA,EAAK;;;MAN5BN,EAAA,CAAAW,UAAA,YAAAZ,GAAA,CAAAM,UAAA,CAA0B;MAMpBL,EAAA,CAAAY,SAAA,GAAiB;MAAjBZ,EAAA,CAAAa,iBAAA,CAAAb,EAAA,CAAAc,WAAA,OAAAf,GAAA,CAAAgB,MAAA,EAAiB;;;;;;ADOmB,C;AAInDP,OAAO,CAACQ,GAAG,CAAC;AAAC;EAClB,IAAI,CAACC,QAAQ,CAACC,iBAAiB,CAACF,GAAG,CAAC,CAACG,SAAS,CAC3CC,QAAQ,IAAG;IACV,IAAI,CAACL,MAAM,GAAGK,QAAQ;EACxB,CAAC,EACAC,KAAuB,IAAI;IAC1BC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}